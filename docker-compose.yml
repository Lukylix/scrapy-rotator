version: "3.3"
services:
  elasticsearch:
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - http.port=9200
      - discovery.type=single-node
      - ELASTIC_USERNAME=elastic
      - ELASTIC_PASSWORD=MagicWord
      - http.max_content_length=10MB
      - http.cors.enabled=true
      - 'http.cors.allow-origin=\*'
      - "http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization"
      - http.cors.allow-credentials=true
      - xpack.security.enrollment.enabled=true
      - network.publish_host=localhost
    image: "elasticsearch"
    volumes:
      - elastic-data:/usr/share/elasticsearch/data
      - ./elasticsearch/es.java.security:/usr/share/elasticsearch/config/es.java.security
      - ./elasticsearch/java.security.options:/usr/share/elasticsearch/config/jvm.options.d/java.security.options
      - ./elasticsearch/certs:/usr/share/elasticsearch/config/certs
    networks:
      - elastic
    depends_on:
      - create_cert
    user: "1000:0"
  create_cert:
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.7.0"
    volumes:
      - ./elasticsearch/certs:/usr/share/elasticsearch/config/certs
    command: >
      bash -c '
        mkdir -p certs;
        if [[ ! -f /usr/share/elasticsearch/config/certs/bundle.zip ]]; then
          bin/elasticsearch-certutil cert --self-signed --silent --pem -out /usr/share/elasticsearch/config/certs/bundle.zip;
          unzip /usr/share/elasticsearch/config/certs/bundle.zip -d /usr/share/elasticsearch/config/certs; 
        fi;
        chown -R 1000:0 /usr/share/elasticsearch/config/certs;
        chmod -R 700 /usr/share/elasticsearch/config/certs;
      '
    user: "1000:0"
  scrapy:
    image: "scrapy"
    environment:
      - TASKS=backend,frontend,products
      - CRON=0 0 * * 0
      - BACKENDS=playwright
      - PROXIES=premium
      - STORAGE=db
volumes:
  elastic-data:
  certs:

networks:
  elastic:
    driver: bridge
